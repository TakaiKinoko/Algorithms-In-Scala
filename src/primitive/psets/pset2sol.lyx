#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble

\renewcommand{\vec}[1]{\mathbf{#1}}

\renewcommand{\labelenumi}{(\alph{enumi})}
\renewcommand{\labelenumii}{(\roman{enumii})}

\newcommand{\fl}{\operatorname{fl}}
\newcommand{\sign}{\operatorname{sign}}
\newcommand{\argmax}{\operatorname{argmax}}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
18.335 Problem Set 2 Solutions
\end_layout

\begin_layout Subsection*
Problem 1: (14+(10+5) points)
\end_layout

\begin_layout Enumerate
Trefethen, exercise 15.1.
 In the following, I abbreviate 
\begin_inset Formula $\epsilon_{\mbox{machine}}=\epsilon_{m}$
\end_inset

, and I use the fact (which follows trivially from the definition of continuity)
 that we can replace any Lipshitz-continuous 
\begin_inset Formula $g(O(\epsilon))$
\end_inset

 with 
\begin_inset Formula $g(0)+g'(0)O(\epsilon)$
\end_inset

.
 I also assume that 
\begin_inset Formula $\fl(x)$
\end_inset

 is deterministicâ€”by a stretch of Trefethen's definitions, it could conceivably
 be nondeterministic in which case one of the answers changes as noted below,
 but this seems crazy to me (and doesn't correspond to any real machine).
 Note also that, at the end of lecture 13, Trefethen points out that the
 same axioms hold for complex floating-point arithmetic as for real floating-poi
nt arithmetic (possibly with 
\begin_inset Formula $\epsilon_{m}$
\end_inset

 increased by a constant factor), so we don't need to do anything special
 here for 
\begin_inset Formula $\mathbb{C}$
\end_inset

 vs.
 
\begin_inset Formula $\mathbb{R}$
\end_inset

.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Backward stable.
 
\begin_inset Formula $x\oplus x=\fl(x)\oplus\fl(x)=[x(1+\epsilon_{1})+x(1+\epsilon_{1})](1+\epsilon_{2})=2\tilde{x}$
\end_inset

 for 
\begin_inset Formula $|\epsilon_{i}|\leq\epsilon_{m}$
\end_inset

 and 
\begin_inset Formula $\tilde{x}=x(1+\epsilon_{1}+\epsilon_{2}+2\epsilon_{1}\epsilon_{2})=x[1+O(\epsilon_{m})]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Backward stable.
 
\begin_inset Formula $x\otimes x=\fl(x)\otimes\fl(x)=[x(1+\epsilon_{1})\times x(1+\epsilon_{1})](1+\epsilon_{2})=\tilde{x}^{2}$
\end_inset

 for 
\begin_inset Formula $|\epsilon_{i}|\leq\epsilon_{m}$
\end_inset

 and 
\begin_inset Formula $\tilde{x}=x(1+\epsilon_{1})\sqrt{1+\epsilon_{2}}=x[1+O(\epsilon_{m})]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Stable but not backwards stable.
 
\begin_inset Formula $x\oslash x=[\fl(x)/\fl(x)](1+\epsilon)=1+\epsilon$
\end_inset

 (not including 
\begin_inset Formula $x=0$
\end_inset

 or 
\begin_inset Formula $\infty$
\end_inset

, which give NaN).
 This is actually forwards stable, but there is no 
\begin_inset Formula $\tilde{x}$
\end_inset

 such that 
\begin_inset Formula $\tilde{x}/\tilde{x}\neq1$
\end_inset

 so it is not backwards stable.
 (Under the stronger assumption of correctly rounded arithmetic, this will
 give exactly 1, however.)
\end_layout

\begin_layout Enumerate
Backwards stable.
 
\begin_inset Formula $x\ominus x=[\fl(x)-\fl(x)](1+\epsilon)=0$
\end_inset

.
 This is the correct answer for 
\begin_inset Formula $\tilde{x}=x$
\end_inset

.
 (In the crazy case where 
\begin_inset Formula $\fl$
\end_inset

 is not deterministic, then it might give a nonzero answer, in which case
 it is unstable.)
\end_layout

\begin_layout Enumerate
Unstable.
 It is definitely not backwards stable, because there is no data (and hence
 no way to choose 
\begin_inset Formula $\tilde{x}$
\end_inset

 to match the output).
 To be stable, it would have to be forwards stable, but it isn't because
 the errors decrease more slowly than 
\begin_inset Formula $O(\epsilon_{m})$
\end_inset

.
 More explicitly, 
\begin_inset Formula $1\oplus\frac{1}{2}\oplus\frac{1}{6}\oplus\cdots$
\end_inset

 summed from left to right will give 
\begin_inset Formula $((1+\frac{1}{2})(1+\epsilon_{1})+\frac{1}{6})(1+\epsilon_{2})\cdots=e+\frac{3}{2}\epsilon_{1}+\frac{10}{6}\epsilon_{2}+\cdots$
\end_inset


\size normal
\noun off
\color none
 
\family roman
\series medium
\shape up
\emph off
\bar no
dropping terms of
\family default
\series default
\shape default
\emph default
\bar default
 
\size default
\noun default

\begin_inset Formula $O(\epsilon^{2})$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
, where the coefficients of the
\family default
\series default
\shape default
\emph default
\bar default
 
\size default
\noun default

\begin_inset Formula $\epsilon_{k}$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
 factors converge to
\family default
\series default
\shape default
\emph default
\bar default
 
\size default
\noun default

\begin_inset Formula $e$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\noun default
 The number of terms is 
\begin_inset Formula $n$
\end_inset

 where 
\begin_inset Formula $n$
\end_inset

 satisfies 
\begin_inset Formula $n!\approx1/\epsilon_{m}$
\end_inset

, which is a function that grows very slowly with 
\begin_inset Formula $1/\epsilon_{m}$
\end_inset

, and hence the error from the additions alone is bounded above by 
\begin_inset Formula $\approx n\epsilon_{m}$
\end_inset

.
 The key point is that the errors grow at least as fast as 
\begin_inset Formula $n\epsilon_{m}$
\end_inset

 (not even counting errors from truncation of the series, approximation
 of 
\begin_inset Formula $1/k!$
\end_inset

, etcetera), which is 
\emph on
not
\emph default
 
\begin_inset Formula $O(\epsilon_{m})$
\end_inset

 because 
\begin_inset Formula $n$
\end_inset

 grows slowly with decreasing 
\begin_inset Formula $\epsilon_{m}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Stable.
 As in (e), it is not backwards stable, so the only thing is to check forwards
 stability.
 Again, there will be 
\begin_inset Formula $n$
\end_inset

 terms in the series, where 
\begin_inset Formula $n$
\end_inset

 is a slowly growing function of 
\begin_inset Formula $1/\epsilon_{m}$
\end_inset

 (
\begin_inset Formula $n!\approx1/\epsilon_{m}$
\end_inset

).
 However, the summation errors no longer grow as 
\begin_inset Formula $n$
\end_inset

.
 From right to left, we are summing 
\begin_inset Formula $\frac{1}{n!}\oplus\frac{1}{(n-1)!}\oplus\cdots\oplus1$
\end_inset

.
 But this gives 
\begin_inset Formula $((\frac{1}{n!}+\frac{1}{(n-1)!})(1+\epsilon_{n-1})+\frac{1}{(n-2)!})(1+\epsilon_{n-2})\cdots,$
\end_inset

and the linear terms in the 
\begin_inset Formula $\epsilon_{k}$
\end_inset

 are then bounded by 
\begin_inset Formula 
\[
\left|\sum_{k=1}^{n-1}\epsilon_{k}\sum_{j=k}^{n}\frac{1}{j!}\right|\leq\epsilon_{m}\sum_{k=1}^{n-1}\sum_{j=k}^{n}\frac{1}{j!}=\epsilon_{m}\left[\frac{n-1}{n!}+\sum_{j=1}^{n-1}\frac{j}{j!}\right]\approx\epsilon_{m}e=O(\epsilon_{m}).
\]

\end_inset

The key point is that the coefficients of the 
\begin_inset Formula $\epsilon_{k}$
\end_inset

 coefficients grow smaller and smaller with 
\begin_inset Formula $k$
\end_inset

, rather than approaching 
\begin_inset Formula $e$
\end_inset

 as for left-to-right summation, and the sum of the coefficients converges.
 The truncation error is of 
\begin_inset Formula $O(\epsilon_{m})$
\end_inset

, and we assume 
\begin_inset Formula $1/k!$
\end_inset

 can also be calculated to within 
\begin_inset Formula $O(\epsilon_{m})$
\end_inset

, e.g.
 via Stirling's approximation for large 
\begin_inset Formula $k$
\end_inset

, so the overall error is 
\begin_inset Formula $O(\epsilon_{m})$
\end_inset

 and the algorithm is forwards stable.
\end_layout

\begin_layout Enumerate
Forwards stable.
 Not backwards stable since no data, but what about forwards stability?
 Supposing 
\begin_inset Formula $\sin(x)$
\end_inset

 is computed in a stable manner, then 
\begin_inset Formula $\widetilde{\sin}(x)=\sin(x+\delta)\cdot[1+O(\epsilon_{m})]$
\end_inset

 for 
\begin_inset Formula $|\delta|=|x|O(\epsilon_{m})$
\end_inset

.
 It follows that, in the vicinity of 
\begin_inset Formula $x=\pi$
\end_inset

, the 
\begin_inset Formula $\widetilde{\sin}$
\end_inset

 function can only change sign within 
\begin_inset Formula $|\delta|=\pi O(\epsilon_{m})$
\end_inset

 of 
\begin_inset Formula $x=\pi$
\end_inset

.
 Hence, checking for 
\begin_inset Formula $\widetilde{\sin}(x)\otimes\widetilde{\sin}(x')\le0$
\end_inset

, where 
\begin_inset Formula $x'$
\end_inset

 is the floating-point successor to 
\begin_inset Formula $x$
\end_inset

 (
\family typewriter
nextfloat(x)
\family default
 in Julia) yields 
\begin_inset Formula $\pi[1+O(\epsilon_{m})]$
\end_inset

, a forwards-stable result.
\end_layout

\end_deeper
\begin_layout Enumerate
Trefethen, exercise 16.1.
 Note that we are free to switch norms as needed, by norm equivalence.
 
\emph on
Notation:
\emph default
 the floating-point algorithm for computing 
\begin_inset Formula $f(A)=QA$
\end_inset

 will be denoted 
\begin_inset Formula $\tilde{f}(A)=\widetilde{QA}$
\end_inset

; I will assume that we simply use the obvious three-loop algorithm, i.e.
 computing the rowâ€“column dot products with in-order (
\begin_inset Quotes eld
\end_inset

recursive
\begin_inset Quotes erd
\end_inset

) summation, allowing us to re-use the summation error analysis from pset
 1.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
We will proceed by induction on 
\begin_inset Formula $k$
\end_inset

: first, we will prove the base case, that multiplying 
\begin_inset Formula $A$
\end_inset

 by a 
\emph on
single
\emph default
 
\begin_inset Formula $Q$
\end_inset

 is backwards stable, and then we will do the inductive step (assume it
 is true for 
\begin_inset Formula $k$
\end_inset

, prove it for 
\begin_inset Formula $k+1$
\end_inset

).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

First, the base case: we need to find a 
\begin_inset Formula $\delta A$
\end_inset

 with 
\begin_inset Formula $\Vert\delta A\Vert=\Vert A\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

 such that 
\begin_inset Formula $\widetilde{QA}=Q(A+\delta A)$
\end_inset

.
 Since 
\begin_inset Formula $\Vert\delta A\Vert=\Vert Q^{*}\widetilde{QA}-A\Vert=\Vert Q(Q^{*}\widetilde{QA}-A)\Vert=\Vert\widetilde{QA}-QA\Vert$
\end_inset

 in the 
\begin_inset Formula $L_{2}$
\end_inset

 norm, however, this is equivalent to showing 
\begin_inset Formula $\Vert\widetilde{QA}-QA\Vert=\Vert A\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

; that is, we can look at the 
\emph on
forwards
\emph default
 error, which is a bit easier.
 It is sufficient to look at the error in the 
\begin_inset Formula $ij$
\end_inset

-th element of 
\begin_inset Formula $QA$
\end_inset

, i.e.
 the error in computing 
\begin_inset Formula $\sum_{k}q_{ik}a_{kj}$
\end_inset

.
 Assuming we do this sum by a straightforward loop, the analysis is exactly
 the same as in problem
\begin_inset space ~
\end_inset

2, except that there is an additional 
\begin_inset Formula $(1+\epsilon)$
\end_inset

 factor in each term for the error in the product 
\begin_inset Formula $q_{ik}a_{kj}$
\end_inset

 [or 
\begin_inset Formula $(1+2\epsilon)$
\end_inset

 if we include the rounding of 
\begin_inset Formula $q_{ik}$
\end_inset

 to 
\begin_inset Formula $\tilde{q}_{ik}=\fl(q_{ik})$
\end_inset

].
 Hence, the error in the 
\begin_inset Formula $ij$
\end_inset

-th element is bounded by 
\begin_inset Formula $mO(\epsilon_{\mbox{machine}})\sum_{k}|q_{ik}a_{kj}|$
\end_inset

, and (using the unitarity of 
\begin_inset Formula $Q$
\end_inset

, which implies that 
\begin_inset Formula $|q_{ik}|\leq1$
\end_inset

) this in turn is bounded by 
\begin_inset Formula $mO(\epsilon_{\mbox{machine}})\sum_{k}|a_{kj}|\leq mO(\epsilon_{\mbox{machine}})\sum_{kj}|a_{kj}|\leq mO(\epsilon_{\mbox{machine}})\Vert A\Vert$
\end_inset

 (since 
\begin_inset Formula $\sum_{kj}|a_{kj}|$
\end_inset

 is just an 
\begin_inset Formula $L_{1}$
\end_inset

 Frobenius norm of 
\begin_inset Formula $A$
\end_inset

, which is within a constant factor of any other norm).
 Summing 
\begin_inset Formula $m^{2}$
\end_inset

 of these errors in the individual elements of 
\begin_inset Formula $QA$
\end_inset

, again using norm equivalence, we obtain 
\begin_inset Formula $\Vert\widetilde{QA}-QA\Vert=O(\sum_{ij}|(\widetilde{QA}-QA)_{ij}|)=m^{3}O(\epsilon_{\mbox{machine}})\Vert A\Vert$
\end_inset

.
 Thus, we have proved backwards stability for multiplying by one unitary
 matrix (with a overly pessimistic 
\begin_inset Formula $m^{3}$
\end_inset

 coefficient, but that doesn't matter here).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Now, we will show by induction that multiplying by 
\begin_inset Formula $k$
\end_inset

 unitary matrices is backwards stable.
 Suppose we have proved it for 
\begin_inset Formula $k$
\end_inset

, and want to prove for 
\begin_inset Formula $k+1$
\end_inset

.
 That, consider 
\begin_inset Formula $QQ_{k}\cdots Q_{1}A$
\end_inset

.
 By assumption, 
\begin_inset Formula $Q_{k}\cdots Q_{1}A$
\end_inset

 is backwards stable, and hence 
\begin_inset Formula $\tilde{B}=\widetilde{Q_{k}\cdots Q_{1}A}=Q_{k}\cdots Q_{1}(A+\delta A_{k})$
\end_inset

 for some 
\begin_inset Formula $\Vert\delta A_{k}\Vert=O(\epsilon_{\mbox{machine}})\Vert A\Vert$
\end_inset

.
 Also, from above, 
\begin_inset Formula $\widetilde{Q\tilde{B}}=Q(\tilde{B}+\delta\tilde{B})$
\end_inset

 for some 
\begin_inset Formula $\Vert\delta\tilde{B}\Vert=O(\epsilon_{\mbox{machine}})\Vert\tilde{B}\Vert=\Vert Q_{k}\cdots Q_{1}(A+\delta A_{k})\Vert O(\epsilon_{\mbox{machine}})=\Vert A+\delta A_{k}\Vert O(\epsilon_{\mbox{machine}})\leq\Vert A\Vert O(\epsilon_{\mbox{machine}})+\Vert\delta A_{k}\Vert O(\epsilon_{\mbox{machine}})=\Vert A\Vert O(\epsilon_{\mbox{machine}})$
\end_inset

.
 Hence, 
\begin_inset Formula $\widetilde{QQ_{k}\cdots Q_{1}A}=\widetilde{Q\tilde{B}}=Q[Q_{k}\cdots Q_{1}(A+\delta A_{k})+\delta\tilde{B}]=QQ_{k}\cdots Q_{1}(A+\delta A)$
\end_inset

 where 
\begin_inset Formula $\delta A=\delta A_{k}+[Q_{1}^{*}\cdots Q_{k}^{*}]\delta\tilde{B}$
\end_inset

 and 
\begin_inset Formula $\Vert\delta A\Vert\leq\Vert\delta A_{k}\Vert+\Vert\delta\tilde{B}\Vert=O(\epsilon_{\mbox{machine}})\Vert A\Vert$
\end_inset

.
 Q.E.D.
\end_layout

\begin_layout Enumerate
Consider 
\begin_inset Formula $XA$
\end_inset

, where 
\begin_inset Formula $X$
\end_inset

 is some rank-1 matrix 
\begin_inset Formula $xy^{*}$
\end_inset

 and 
\begin_inset Formula $A$
\end_inset

 has rank 
\begin_inset Formula $>1$
\end_inset

.
 The product 
\begin_inset Formula $XA$
\end_inset

 has rank
\begin_inset space ~
\end_inset

1 in exact arithmetic, but after floating-point errors it is unlikely that
 
\begin_inset Formula $\widetilde{XA}$
\end_inset

 will be exactly rank 1.
 Hence it is not backwards stable, because 
\begin_inset Formula $X\tilde{A}$
\end_inset

 will be rank
\begin_inset space ~
\end_inset

1 regardless of 
\begin_inset Formula $\tilde{A}$
\end_inset

, and thus is 
\begin_inset Formula $\neq\widetilde{XA}$
\end_inset

.
 (See also example 15.2 in the text.)
\end_layout

\end_deeper
\begin_layout Subsection*
Problem 2: (10+10 points)
\end_layout

\begin_layout Enumerate
Denote the rows of 
\begin_inset Formula $A$
\end_inset

 by 
\begin_inset Formula $a_{1}^{T},\ldots,a_{m}^{T}$
\end_inset

.
 Consider the unit ball in the 
\begin_inset Formula $L_{\infty}$
\end_inset

 norm, the set 
\begin_inset Formula $\{x\in\mathbb{C}^{n}:\Vert x\Vert_{\infty}\leq1\}$
\end_inset

.
 Any vector 
\begin_inset Formula $Ax$
\end_inset

 in the image of this set satisfies: 
\begin_inset Formula 
\[
\Vert Ax\Vert_{\infty}=\max_{j\in1:m}|a_{j}^{T}x|=\max_{j\in1:m}\left|\sum_{k\in1:n}a_{j,k}x_{k}\right|\leq\max_{j\in1:m}\sum_{k\in1:n}|a_{j,k}|=\max_{j\in1:m}\Vert a_{j}\Vert,
\]

\end_inset

since 
\begin_inset Formula $|x_{k}|\leq1$
\end_inset

 in the 
\begin_inset Formula $L_{\infty}$
\end_inset

 unit ball.
 Furthermore, this bound is achieved when 
\begin_inset Formula $x_{k}=\sign(a_{j,k})$
\end_inset

 where 
\begin_inset Formula $j=\argmax_{j}\Vert a_{j}\Vert$
\end_inset

.
 Hence 
\begin_inset Formula $\Vert A\Vert_{\infty}=\max_{j}\Vert a_{j}\Vert$
\end_inset

, corresponding to (3.10).
 Q.E.D.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

If we look in the Julia source code, we find that this norm is computed
 by summing the absolute values of each row of 
\family typewriter
A
\family default
 and then takes the maximum, exactly as in (3.10).
\end_layout

\begin_layout Enumerate
To obtain 
\begin_inset Formula $\mu\times\nu$
\end_inset

 submatrix 
\begin_inset Formula $B$
\end_inset

 of the 
\begin_inset Formula $m\times n$
\end_inset

 matrix 
\begin_inset Formula $A$
\end_inset

 by selecting a subset of the rows and columns of 
\begin_inset Formula $A$
\end_inset

, we simply multiply 
\begin_inset Formula $A$
\end_inset

 on the left and right by 
\begin_inset Formula $\mu\times m$
\end_inset

 and 
\begin_inset Formula $n\times\nu$
\end_inset

 matrices as follows:
\begin_inset Formula 
\[
B=\left(\begin{array}{ccccc}
1\\
 &  &  & 1\\
 &  &  &  & \ddots
\end{array}\right)A\left(\begin{array}{ccc}
\\
1\\
 & 1\\
 &  & \ddots\\
\\
\end{array}\right)
\]

\end_inset

where there are 
\begin_inset Formula $1$
\end_inset

's in the columns/rows to be selected.
 More precisely, if we want a subset 
\begin_inset Formula $\mathcal{R}$
\end_inset

 of the rows of 
\begin_inset Formula $A$
\end_inset

 and a subset 
\begin_inset Formula $\mathcal{C}$
\end_inset

 of the columns of 
\begin_inset Formula $A$
\end_inset

, then we compute 
\begin_inset Formula $B=D_{\mathcal{R}}AD_{\mathcal{C}}^{T}$
\end_inset

, where the 
\begin_inset Quotes eld
\end_inset

deletion matrix
\begin_inset Quotes erd
\end_inset

 for an ordered set 
\begin_inset Formula $\mathcal{S}$
\end_inset

 of indices is given by 
\begin_inset Formula $(D_{\mathcal{S}})_{ij}=1$
\end_inset

 if 
\begin_inset Formula $j$
\end_inset

 equals the 
\begin_inset Formula $i$
\end_inset

-th element of 
\begin_inset Formula $\mathcal{S}$
\end_inset

 and 
\begin_inset Formula $(D_{\mathcal{S}})_{ij}=0$
\end_inset

 otherwise; 
\begin_inset Formula $D_{\mathcal{R}}$
\end_inset

 is 
\begin_inset Formula $\mu\times m$
\end_inset

 and 
\begin_inset Formula $D_{\mathcal{C}}$
\end_inset

 is 
\begin_inset Formula $\nu\times n$
\end_inset

 .
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

From Trefethen, chapter 3, we have 
\begin_inset Formula $\Vert B\Vert_{p}\leq\Vert A\Vert_{p}\Vert D_{\mathcal{R}}\Vert_{p}\Vert D_{\mathcal{C}}\Vert_{p}$
\end_inset

.
 So, we merely need to show 
\begin_inset Formula $\Vert D_{\mathcal{S}}\Vert_{p}\leq1$
\end_inset

 and the result follows.
 But this is trivial: 
\begin_inset Formula $\Vert D_{\mathcal{S}}x\Vert_{p}=\left[\sum_{i\in\mathcal{S}}|x_{i}|^{p}\right]^{1/p}\leq\left[\sum_{i}|x_{i}|^{p}\right]^{1/p}=\Vert x\Vert_{p},$
\end_inset

 so 
\begin_inset Formula $\Vert D_{\mathcal{S}}\Vert_{p}\leq1$
\end_inset

 and we obtain 
\begin_inset Formula $\Vert B\Vert_{p}\leq\Vert A\Vert_{p}$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In Julia, we construct a random 
\begin_inset Formula $10\times7$
\end_inset

 
\begin_inset Formula $A$
\end_inset

 by 
\family typewriter
A=randn(10,7)
\family default
, and an arbitrary 
\begin_inset Formula $3\times4$
\end_inset

 subset of this matrix by 
\family typewriter
B = A[[1,3,4],[2,3,5,6]]
\family default
.
 Then 
\family typewriter
norm(B) <= norm(A)
\family default
 (the 
\begin_inset Formula $p=2$
\end_inset

 norm) returns 
\family typewriter
true
\family default
.
 As a more careful test, we can also try computing thousands of such random
 matrices and check that the maximum of 
\family typewriter
norm(B)/norm(A) 
\family default
is 
\begin_inset Formula $<1$
\end_inset

; a one-liner to do this in Julia is 
\family typewriter
maximum(Float64[let A=randn(10,7); norm(A[1:3,1:4])/norm(A); end for i=1:10000])
\family default
, which returns roughly 0.92.
 However, a quick check with a single matrix is acceptable hereâ€”such numerical
 
\begin_inset Quotes eld
\end_inset

spot checks
\begin_inset Quotes erd
\end_inset

 are extremely useful to catch gross errors, but of course they aren't a
 substitute for proof, only a supplement (or sometimes a suggestive guide,
 if the numerical results precede the proof).
\end_layout

\begin_layout Subsection*
Problem 3: (21 points)
\end_layout

\begin_layout Standard
To get the condition number of 
\begin_inset Formula $g(A)=Ax$
\end_inset

, we first need to to get the Jacobian.
 The most natural definition would have entries 
\begin_inset Formula $\frac{\partial g_{i}}{\partial A_{jk}}$
\end_inset

, but this would result in a 3-index object (a 
\begin_inset Quotes eld
\end_inset

3d matrix
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

rank 3 tensor
\begin_inset Quotes erd
\end_inset

), which would require us to involve techniques from multilinear algebra.
 Instead, we can use ordinary linear algebra with an ordinary Jacobian matrix
 if we treat the input 
\begin_inset Formula $A$
\end_inset

 as a 
\begin_inset Quotes eld
\end_inset

1d
\begin_inset Quotes erd
\end_inset

 vector 
\begin_inset Formula $a$
\end_inset

 of length 
\begin_inset Formula $mn$
\end_inset

: 
\begin_inset Formula 
\[
a=\left(\begin{array}{c}
(A_{1,:})^{T}\\
(A_{2,:})^{T}\\
\vdots\\
(A_{m,:})^{T}
\end{array}\right),
\]

\end_inset

i.e.
 
\begin_inset Formula $a$
\end_inset

 consists of the rows of 
\begin_inset Formula $A$
\end_inset

 (transposed to column vectors), one after the other, in sequence (i.e., row-major
 storage of 
\begin_inset Formula $A$
\end_inset

).
 (We could also stack the columns; this isomorphism is called the 
\begin_inset Quotes eld
\end_inset

vectorization
\begin_inset Quotes erd
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

.) There are 
\begin_inset Formula $m$
\end_inset

 outputs 
\begin_inset Formula $f_{i}$
\end_inset

 of 
\begin_inset Formula $Ax$
\end_inset

, each one of which dots one row of 
\begin_inset Formula $A$
\end_inset

 with 
\begin_inset Formula $x$
\end_inset

.
 Hence, in terms of 
\begin_inset Formula $a$
\end_inset

, the 
\begin_inset Formula $m\times(mn)$
\end_inset

 Jacobian matrix looks like 
\begin_inset Formula 
\[
J=\left(\begin{array}{cccc}
x^{T}\\
 & x^{T}\\
 &  & \ddots\\
 &  &  & x^{T}
\end{array}\right).
\]

\end_inset

 Since this is block-diagonal, it is easy to figure out 
\begin_inset Formula $\sup_{z\neq0}\frac{\Vert Jz\Vert}{\Vert z\Vert}$
\end_inset

, as long as we pick a norm of the inputs 
\begin_inset Formula $A$
\end_inset

 that allows us to easily compute the corresponding norm of the 
\begin_inset Quotes eld
\end_inset

vector
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $z$
\end_inset

, and so it is convenient to choose the the Frobenius norm so that 
\begin_inset Formula $\Vert A\Vert_{F}=\Vert z\Vert_{2}$
\end_inset

.
 To maximize 
\begin_inset Formula $\frac{\Vert Jz\Vert}{\Vert z\Vert}$
\end_inset

, let's write 
\begin_inset Formula $z$
\end_inset

 as 
\begin_inset Formula 
\[
z=\left(\begin{array}{c}
x_{1}\\
x_{2}\\
\vdots\\
x_{m}
\end{array}\right)
\]

\end_inset

in terms of vectors 
\begin_inset Formula $x_{k}\in\mathbb{C}^{n}$
\end_inset

.
 Then 
\begin_inset Formula 
\[
\Vert J\Vert_{2}=\frac{\Vert Jz\Vert_{2}}{\Vert z\Vert_{2}}=\sqrt{\frac{|x^{T}x_{1}|^{2}+|x^{T}x_{2}|^{2}+\cdots+|x^{T}x_{m}|^{2}}{x_{1}^{*}x_{1}+x_{2}^{*}x_{2}+\cdots+x_{m}^{*}x_{m}},}
\]

\end_inset

which is clearly maximized when 
\begin_inset Formula $x_{k}=\alpha_{k}\bar{x}$
\end_inset

 (to maximize the dot products 
\begin_inset Formula $x^{T}x_{k}\to|\alpha_{k}|^{2}\Vert x\Vert_{2}^{2}$
\end_inset

 over all vectors 
\begin_inset Formula $x_{k}$
\end_inset

 of a given length) for some scalar 
\begin_inset Formula $\alpha_{k}\in\mathbb{C}$
\end_inset

, giving 
\begin_inset Formula $\Vert J\Vert_{2}=\Vert x\Vert_{2}\sqrt{\frac{\sum|\alpha_{k}|^{2}}{\sum|\alpha_{k}|^{2}}}=\Vert x\Vert_{2}.$
\end_inset

 Hence, the condition number is 
\begin_inset Formula $\kappa(A)=\frac{\Vert J\Vert}{\Vert Ax\Vert/\Vert A\Vert}=\frac{\Vert x\Vert_{2}\Vert A\Vert_{F}}{\Vert Ax\Vert_{2}},$
\end_inset

 which is almost exactly the same the condition number for 
\begin_inset Formula $f(x)=Ax$
\end_inset

, except that we substitute 
\begin_inset Formula $\Vert A\Vert_{F}$
\end_inset

 for 
\begin_inset Formula $\Vert A\Vert_{2}$
\end_inset

.
 Due to the equivalence of norms, however, this means that the condition
 numbers differ only by at most a constant factor independent of 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $x$
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

(There are other possible choices of norm where this computation is reasonable
 to carry out, but in any case you should get something similar up to a
 constant factor.)
\end_layout

\begin_layout Subsection*
Problem 4: (10+10+10 points)
\end_layout

\begin_layout Enumerate
Trefethen, probem 4.5.
 It is sufficient to show that the reduced SVD 
\begin_inset Formula $A\hat{V}=\hat{U}\hat{\Sigma}$
\end_inset

 is real, since the remaining columns of 
\begin_inset Formula $U$
\end_inset

 and 
\begin_inset Formula $V$
\end_inset

 are formed as a basis for the orthogonal complement of the columns of 
\begin_inset Formula $\hat{U}$
\end_inset

 and 
\begin_inset Formula $\hat{V}$
\end_inset

, and if the latter are real then their complement is obviously also real.
 Furthermore, it is sufficient to show that 
\begin_inset Formula $\hat{U}$
\end_inset

 can be chosen real, since (from class) 
\begin_inset Formula $A^{*}u_{i}/\sigma_{i}=v_{i}$
\end_inset

 for each column 
\begin_inset Formula $u_{i}$
\end_inset

 of 
\begin_inset Formula $\hat{U}$
\end_inset

 and 
\begin_inset Formula $v_{i}$
\end_inset

 of 
\begin_inset Formula $\hat{U}$
\end_inset

, and 
\begin_inset Formula $A^{*}$
\end_inset

 is real.
 The columns 
\begin_inset Formula $u_{i}$
\end_inset

 are eigenvectors of 
\begin_inset Formula $A^{*}A=B$
\end_inset

, which is a real-symmetric matrix, i.e.
 
\begin_inset Formula $Bu_{i}=\sigma_{i}^{2}u_{i}$
\end_inset

.
 Suppose that the 
\begin_inset Formula $u_{i}$
\end_inset

 are 
\emph on
not
\emph default
 real.
 Then the real and imaginary parts of 
\begin_inset Formula $u_{i}$
\end_inset

 are themselves eigenvectors (if they are nonzero) with eigenvalue 
\begin_inset Formula $\sigma_{i}^{2}$
\end_inset

 (proof: take the real and imaginary parts of 
\begin_inset Formula $Bu_{i}=\sigma_{i}^{2}u_{i}$
\end_inset

, since 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $\sigma_{i}^{2}$
\end_inset

 are real).
 Hence, taking either the real or imaginary parts of the complex 
\begin_inset Formula $u_{i}$
\end_inset

 (whichever is nonzero) and normalizing them to unit length, we obtain a
 new purely real 
\begin_inset Formula $\hat{U}$
\end_inset

.
 Q.E.D.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
There is a slight wrinkle if there are repeated eigenvalues, e.g.
 
\begin_inset Formula $\sigma_{1}=\sigma_{2}$
\end_inset

, because the real or imaginary parts of 
\begin_inset Formula $u_{1}$
\end_inset

 and 
\begin_inset Formula $u_{2}$
\end_inset

 might not be orthogonal.
 However, taken together, the real and imaginary parts of any multiple eigenvalu
es must span the same space, and hence we can find a real orthonormal basis
 with Gram-Schmidt or whatever.
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Trefethen, problem 5.2.
 We just need to show that, for any 
\begin_inset Formula $A\in\mathbb{C}^{m\times n}$
\end_inset

 with rank 
\begin_inset Formula $<n$
\end_inset

 and for any 
\begin_inset Formula $\epsilon>0$
\end_inset

, we can find sequence of full-rank matrices 
\begin_inset Formula $B$
\end_inset

 that eventually satisfies 
\begin_inset Formula $\Vert A-B\Vert_{2}<\epsilon$
\end_inset

.
 Form the SVD 
\begin_inset Formula $A=U\Sigma V^{*}$
\end_inset

 with singular values 
\begin_inset Formula $\sigma_{1},\ldots,\sigma_{r}$
\end_inset

 where 
\begin_inset Formula $r<n$
\end_inset

 is the rank of 
\begin_inset Formula $A$
\end_inset

.
 Let 
\begin_inset Formula $B=U\tilde{\Sigma}V^{*}$
\end_inset

 where 
\begin_inset Formula $\tilde{\Sigma}$
\end_inset

 is the same as 
\begin_inset Formula $\Sigma$
\end_inset

 except that it has 
\begin_inset Formula $n-r$
\end_inset

 additional nonzero singular values 
\begin_inset Formula $\sigma_{k>r}=\epsilon/2$
\end_inset

.
 From equation 5.4 in the book, 
\begin_inset Formula $\Vert B-A\Vert_{2}=\sigma_{r+1}=\epsilon/2<\epsilon$
\end_inset

, noting that 
\begin_inset Formula $A=B_{r}$
\end_inset

 in the notation of the book.
 We can then make a sequence of such matrices e.g.
 by letting 
\begin_inset Formula $\epsilon=\sigma_{r}2^{-k}$
\end_inset

 for 
\begin_inset Formula $k=1,2,\ldots$
\end_inset

.
\end_layout

\begin_layout Enumerate
Trefethen, problem 5.4.
 From 
\begin_inset Formula $A=U\Sigma V^{*}$
\end_inset

, recall that 
\begin_inset Formula $AV=U\Sigma$
\end_inset

 and 
\begin_inset Formula $A^{*}U=V\Sigma$
\end_inset

.
 Therefore, 
\begin_inset Formula 
\[
\left(\begin{array}{cc}
 & A^{*}\\
A
\end{array}\right)\left(\begin{array}{c}
V\\
\pm U
\end{array}\right)=\left(\begin{array}{c}
\pm A^{*}U\\
AV
\end{array}\right)=\pm\left(\begin{array}{c}
V\Sigma\\
\pm U\Sigma
\end{array}\right)=\pm\left(\begin{array}{c}
V\\
\pm U
\end{array}\right)\Sigma
\]

\end_inset

and hence 
\begin_inset Formula $(v_{i};\pm u_{i})$
\end_inset

 is an eigenvector of 
\begin_inset Formula $\left(\begin{array}{cc}
 & A^{*}\\
A
\end{array}\right)$
\end_inset

 with eigenvalue 
\begin_inset Formula $\pm\sigma_{i}$
\end_inset

.
 Noting that these vectors 
\begin_inset Formula $(v_{i};\pm u_{i})$
\end_inset

 are orthogonal by construction and only need to be divided by 
\begin_inset Formula $\sqrt{2}$
\end_inset

 to be normalized, we immediately obtain the diagonalization 
\begin_inset Formula 
\[
\left(\begin{array}{cc}
 & A^{*}\\
A
\end{array}\right)=Q\left(\begin{array}{cc}
+\Sigma\\
 & -\Sigma
\end{array}\right)Q^{*}
\]

\end_inset

 for 
\begin_inset Formula 
\[
Q=\left(\begin{array}{cc}
V & V\\
+U & -U
\end{array}\right)/\sqrt{2}.
\]

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
